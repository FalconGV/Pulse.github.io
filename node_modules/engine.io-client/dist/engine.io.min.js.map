{"version":3,"file":"engine.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/@socket.io/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/transport.js","../build/esm/contrib/yeast.js","../build/esm/contrib/parseqs.js","../build/esm/contrib/has-cors.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/transports/polling.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/socket.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2022 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"@socket.io/base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol, } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","obj","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","prev","TransportError","_inherits","reason","description","context","_classCallCheck","_this","Error","Transport","_this2","writable","query","socket","_createClass","value","_get","readyState","doOpen","doClose","onClose","packets","write","packet","onPacket","details","onPause","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","get","poll","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","_this3","onOpen","close","_this4","count","encodePayload","_this5","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","indexOf","path","_extends","Request","uri","req","request","method","xhrStatus","_this6","onError","onData","_this7","pollXhr","_this8","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","_this9","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","_loop","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j"],"mappings":"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"}